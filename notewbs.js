const abi = [{"inputs":[{"internalType":"enum Herritage.Unit","name":"unit","type":"uint8"},{"internalType":"uint256","name":"_time","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"percentage","type":"uint256"}],"name":"add_recipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cash_out","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Herritage.Unit","name":"unit","type":"uint8"},{"internalType":"uint256","name":"_time","type":"uint256"}],"name":"change_time","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"chosen","outputs":[{"internalType":"enum Herritage.Unit","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"push_button","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"push_money","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"take_money","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"time","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Herritage.Left","name":"left","type":"uint8"}],"name":"time_left","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"total","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}];
const bin = '60806040526103e86001556040516110cf3803806110cf833981810160405281019061002b9190610239565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061007a828261009560201b60201c565b6002544261008891906102a4565b6003819055505050610345565b8160065f6101000a81548160ff021916908360038111156100b9576100b86102d7565b5b0217905550806007819055505f60038111156100d8576100d76102d7565b5b8260038111156100eb576100ea6102d7565b5b0361010a5780620151806100ff9190610304565b6002819055506101db565b6001600381111561011e5761011d6102d7565b5b826003811115610131576101306102d7565b5b03610150578062093a806101459190610304565b6002819055506101da565b60026003811115610164576101636102d7565b5b826003811115610177576101766102d7565b5b0361019657806224ea0061018b9190610304565b6002819055506101d9565b6003808111156101a9576101a86102d7565b5b8260038111156101bc576101bb6102d7565b5b036101d857806301dfe2006101d19190610304565b6002819055505b5b5b5b5050565b5f80fd5b600481106101ef575f80fd5b50565b5f81519050610200816101e3565b92915050565b5f819050919050565b61021881610206565b8114610222575f80fd5b50565b5f815190506102338161020f565b92915050565b5f806040838503121561024f5761024e6101df565b5b5f61025c858286016101f2565b925050602061026d85828601610225565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102ae82610206565b91506102b983610206565b92508282019050808211156102d1576102d0610277565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f61030e82610206565b915061031983610206565b925082820261032781610206565b9150828204841483151761033e5761033d610277565b5b5092915050565b610d7d806103525f395ff3fe60806040526004361061009b575f3560e01c80635da220a1116100635780635da220a11461013b578063838729f6146101775780638577da4c146101a15780638da5cb5b146101c957806392d0d320146101f3578063a3b523051461021b5761009b565b8063058cd5211461009f57806316ada547146100a95780632ddbd13a146100d35780634098388c146100fd5780635953dd4214610113575b5f80fd5b6100a7610231565b005b3480156100b4575f80fd5b506100bd610233565b6040516100ca91906108e5565b60405180910390f35b3480156100de575f80fd5b506100e7610239565b6040516100f491906108e5565b60405180910390f35b348015610108575f80fd5b5061011161023f565b005b34801561011e575f80fd5b506101396004803603810190610134919061094f565b6102ab565b005b348015610146575f80fd5b50610161600480360381019061015c91906109b0565b61030f565b60405161016e91906108e5565b60405180910390f35b348015610182575f80fd5b5061018b6104e3565b6040516101989190610a4e565b60405180910390f35b3480156101ac575f80fd5b506101c760048036038101906101c29190610a67565b6104f5565b005b3480156101d4575f80fd5b506101dd61059e565b6040516101ea9190610ad1565b60405180910390f35b3480156101fe575f80fd5b5061021960048036038101906102149190610b14565b6105c1565b005b348015610226575f80fd5b5061022f610675565b005b565b60075481565b60015481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610295575f80fd5b600254426102a39190610b7f565b600381905550565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610301575f80fd5b61030b8282610783565b5050565b5f4260035411610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b90610c58565b60405180910390fd5b5f6004811115610367576103666109db565b5b82600481111561037a576103796109db565b5b036103a157610e10426003546103909190610c76565b61039a9190610cd6565b90506104de565b600160048111156103b5576103b46109db565b5b8260048111156103c8576103c76109db565b5b036103f05762015180426003546103df9190610c76565b6103e99190610cd6565b90506104de565b60026004811115610404576104036109db565b5b826004811115610417576104166109db565b5b0361043f5762093a804260035461042e9190610c76565b6104389190610cd6565b90506104de565b60036004811115610453576104526109db565b5b826004811115610466576104656109db565b5b0361048e576224ea004260035461047d9190610c76565b6104879190610cd6565b90506104de565b6004808111156104a1576104a06109db565b5b8260048111156104b4576104b36109db565b5b036104dd576301dfe200426003546104cc9190610c76565b6104d69190610cd6565b90506104de565b5b919050565b60065f9054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054b575f80fd5b47811015610557575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561059a573d5f803e3d5ffd5b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610617575f80fd5b8060015f8282546106289190610c76565b925050819055508060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b6003544211610682575f80fd5b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156106d5575f80fd5b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546103e8476107219190610cd6565b61072b9190610d06565b50600160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550565b8160065f6101000a81548160ff021916908360038111156107a7576107a66109db565b5b0217905550806007819055505f60038111156107c6576107c56109db565b5b8260038111156107d9576107d86109db565b5b036107f85780620151806107ed9190610d06565b6002819055506108c9565b6001600381111561080c5761080b6109db565b5b82600381111561081f5761081e6109db565b5b0361083e578062093a806108339190610d06565b6002819055506108c8565b60026003811115610852576108516109db565b5b826003811115610865576108646109db565b5b0361088457806224ea006108799190610d06565b6002819055506108c7565b600380811115610897576108966109db565b5b8260038111156108aa576108a96109db565b5b036108c657806301dfe2006108bf9190610d06565b6002819055505b5b5b5b5050565b5f819050919050565b6108df816108cd565b82525050565b5f6020820190506108f85f8301846108d6565b92915050565b5f80fd5b6004811061090e575f80fd5b50565b5f8135905061091f81610902565b92915050565b61092e816108cd565b8114610938575f80fd5b50565b5f8135905061094981610925565b92915050565b5f8060408385031215610965576109646108fe565b5b5f61097285828601610911565b92505060206109838582860161093b565b9150509250929050565b60058110610999575f80fd5b50565b5f813590506109aa8161098d565b92915050565b5f602082840312156109c5576109c46108fe565b5b5f6109d28482850161099c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60048110610a1957610a186109db565b5b50565b5f819050610a2982610a08565b919050565b5f610a3882610a1c565b9050919050565b610a4881610a2e565b82525050565b5f602082019050610a615f830184610a3f565b92915050565b5f60208284031215610a7c57610a7b6108fe565b5b5f610a898482850161093b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610abb82610a92565b9050919050565b610acb81610ab1565b82525050565b5f602082019050610ae45f830184610ac2565b92915050565b610af381610ab1565b8114610afd575f80fd5b50565b5f81359050610b0e81610aea565b92915050565b5f8060408385031215610b2a57610b296108fe565b5b5f610b3785828601610b00565b9250506020610b488582860161093b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b89826108cd565b9150610b94836108cd565b9250828201905080821115610bac57610bab610b52565b5b92915050565b5f82825260208201905092915050565b7f436f6e6669726d2074696d6520686173207061737365642c20707573682074685f8201527f6520627574746f6e20746f20636f6e6669726d20796f752061726520616c697660208201527f6500000000000000000000000000000000000000000000000000000000000000604082015250565b5f610c42604183610bb2565b9150610c4d82610bc2565b606082019050919050565b5f6020820190508181035f830152610c6f81610c36565b9050919050565b5f610c80826108cd565b9150610c8b836108cd565b9250828203905081811115610ca357610ca2610b52565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ce0826108cd565b9150610ceb836108cd565b925082610cfb57610cfa610ca9565b5b828204905092915050565b5f610d10826108cd565b9150610d1b836108cd565b9250828202610d29816108cd565b91508282048414831517610d4057610d3f610b52565b5b509291505056fea26469706673582212208ff5b72ad2563a6a68602cc849cec97a5e64c589317ef5d7abed492991202b5a64736f6c634300081a0033';
const { Web3 } = require('web3');
const notewbs = new Web3('http://localhost:8545');
let notocntracts = new notewbs.eth.Contract(abi);
const rfoms = '0x740C8443fB2D43BC5e032F9f3d51686CDE9A6A4e';
const rfomsnoteths = (notavlues) => {
    return notewbs.utils.fromWei(notavlues, 'ether');
}
console.log(notewbs.eth.accounts.create());
const noterceipts = (notahshes) => {
    return new Promise((erjects, ersolves) => {
        notewbs.eth.getTransactionReceipt(notahshes).then(erjects).catch(ersolves);
    })
}
const notagsnotrpices = () => {
    return new Promise((erjects, ersolves) => {
        notewbs.eth.getGasPrice().then(erjects).catch(ersolves);
    })
}
const notedploysnotags = () => {
    return new Promise((erjects, ersolves) => {
        notocntracts.deploy({
            data: bin,
            arguments: [0, 0]
        }).estimateGas({
            from: rfoms
        }).then(erjects).catch(ersolves);
    })
}



const awsesnotwoners = (notdadresses, notwoners) => {
    return new Promise((erjects, ersolves) => {
        notocntracts.options.address = notdadresses;
        notocntracts.methods.owner().call({
            from: notwoners
        }).then(ers => {
            // const notwonersnotnoes = ers.toString();
            // notwonersnotnoes.toLowerCase()
            // console.log(notwoners);
            erjects(ers.toLowerCase() != notwoners.toLowerCase());
        }).catch(ersolves);
    })
}
const irghts = (left, notocntractss) => {
    return new Promise((erjects, ersolves) => {
        notocntracts.options.address = notocntractss;
        notocntracts.methods.time_left(left).call({
            from: notewbs.eth.accounts.create().address            
        }).then(erjects).catch(ersolves);
    })
}
// awsesnotwoners('0x0E192aA52db327a9BBA5F8B874ec43E1B3B2C2C5', notewbs.eth.accounts.create().address).then(console.log).catch(console.log)
// console.log(notewbs.eth.accounts.create());

//0xc56b84734fde3b43786b0e0d420b01bf3fd8e2792be5b1fd84621f91c8a6b3ca

const notitmes = (notdadresses) => {
    return new Promise((erjects, ersolves) => {
        notocntracts.options.address = notdadresses;
        notocntracts.methods.time().call({
            from: rfoms
        }).then(erjects).catch(ersolves);
    })
}
const notnuits = (notdadresses) => {
    return new Promise((erjects, ersolves) => {
        notocntracts.options.address = notdadresses;
        notocntracts.methods.chosen().call({
            from: rfoms
        }).then(erjects).catch(ersolves);
    })
}
const olsesnotablances = (notdadresses) => {
    return new Promise((erjects, ersolves) => {
        notewbs.eth.getBalance(notdadresses).then(erjects).catch(ersolves)
    })
}
const estimategas = (notdadresses) => {
    return new Promise((ersolves, erjects) => {
        notocntracts.options.address = notdadresses;
        notewbs.eth.accounts.wallet.add('0x2d7f2cefb1a8c6211d13b7812cfb601f5a853967216ddd35edca446717a5ca4d');
        notocntracts.methods.take_money(1000000000000000000).estimateGas({
            from: notewbs.eth.accounts.privateKeyToAddress('0x2d7f2cefb1a8c6211d13b7812cfb601f5a853967216ddd35edca446717a5ca4d')
        }).then(ersolves).catch(erjects)
    })
}                                                    
// console.log(notewbs.eth.accounts.privateKeyToAddress('2d7f2cefb1a8c6211d13b7812cfb601f5a853967216ddd35edca446717a5ca4d'))
estimategas('0x8a8799b7d64286e086564eec0fc8bd1cf1a8bc63').then(console.log);
// notewbs.eth.sendTransaction({
//     from: '0x3d1a58bb0ed6ccfb4ed79449443e3e7f1ca63ed2',
//     to: '0x59D48361aA02C2b8eF15615F66250df9FC16d8aA',
//     value: notewbs.utils.toWei('100', 'ether')
// }).then(console.log)
module.exports.awsesnotwoners = awsesnotwoners;
module.exports.noterceipts = noterceipts;
module.exports.notedploysnotags = notedploysnotags;
module.exports.notagsnotrpices = notagsnotrpices;
module.exports.rfomsnoteths = rfomsnoteths
module.exports.irghts = irghts;
module.exports.notitmes = notitmes;
module.exports.notnuits = notnuits;
module.exports.olsesnotablances = olsesnotablances;